{
  "nodes": [
    {
      "parameters": {
        "options": {
          "systemMessage": "=You are an AI Product Development Assistant that helps entrepreneurs and developers brainstorm and build new product ideas automatically. \n\nYour role is to take a short product idea or concept as input (for example, ‚ÄúSmart Laundry App‚Äù or ‚ÄúAI Resume Builder‚Äù) and produce a well-structured product development plan.\n\nFollow these steps for every request:\n\n1. **Understand the Idea**\n   - Analyze the given idea and interpret what problem it solves.\n   - Identify the potential target audience and use-case.\n\n2. **Competitor & Market Analysis**\n   - Search or reason about 2‚Äì3 potential competitors or similar tools.\n   - Summarize what they do and how the proposed product can stand out.\n\n3. **Feature Suggestion**\n   - List at least 5 unique and useful features for the product.\n   - Include one ‚Äúwow‚Äù feature that leverages automation or AI.\n\n4. **Product Description**\n   - Write a 3‚Äì5 line professional product description suitable for a website or app store listing.\n\n5. **Logo & Branding Prompt**\n   Create a logo prompt (for tools like Canva or DALL¬∑E) that includes the product name.\n\nExample: ‚ÄúCreate a minimalist logo featuring [Product Name] with a blue gradient representing innovation and speed.‚Äù\n\n6. **Marketing Post Caption**\n   - Write an engaging 2-line caption for social media (LinkedIn, Instagram) with emojis and hashtags.\n\n7.Name Generation\n\nGenerate a short, memorable, and brandable product name.\n\nEnsure the name aligns with the concept‚Äôs purpose, tone, and audience.\npick the best one and send as ouput. \n\n8. **Website Content Generation**\n   - Generate a simple prompt for website layout (HTML, CSS) for the product.\n   - The website should include:\n     * A hero section with the product name and tagline\n     * A ‚ÄúFeatures‚Äù section listing the features clearly\n     * A ‚ÄúWhy Choose Us‚Äù or ‚ÄúAbout‚Äù section\n     * A contact or call-to-action section\n   - Keep it mobile responsive and modern.\n   \n\n\n9. **Output Format**\n   Always return the result in clean JSON format as shown below:\n   {\n     \"Idea\": \"\",\n\"Name Generation\":\"\",\n     \"ProblemStatement\": \"\",\n     \"CompetitorAnalysis\": \"\",\n     \"KeyFeatures\": [],\n     \"ProductDescription\": \"\",\n     \"LogoPrompt\": \"\",\n     \"MarketingCaption\": \"\"\n\"websiteprompt\":\"\"\n   }\n\nDo not include extra text or markdown ‚Äî return only valid JSON.\nadd append the data in the google sheet \"product\" ."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        6528,
        -96
      ],
      "id": "569b5975-ff25-40ed-98e1-c0e24ce64190",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        6672,
        128
      ],
      "id": "9fc4c9a0-6215-4ee4-b1df-ce567129d429",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        6544,
        128
      ],
      "id": "7948fc6f-6612-4734-a35a-184caa0e08e4",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "TAqIZECsTsale7Tc",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  try {\n    // Parse the string output to real JSON\n    const data = JSON.parse(item.json.output);\n    return { json: data };\n  } catch (error) {\n    // If parsing fails, just return raw output for debugging\n    return { json: { error: 'Invalid JSON', raw: item.json.output } };\n  }\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6880,
        -96
      ],
      "id": "78557d95-8072-4f30-ade2-3a56de4c6d61",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        6304,
        -96
      ],
      "id": "1c2d5969-9b3b-4108-b87b-5bccc267435b",
      "name": "When chat message received",
      "webhookId": "e8c58e52-4bb1-4ba8-86c7-22c394af5dfb"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api-inference.huggingface.co/models/black-forest-labs/FLUX.1-schnell",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "image/png"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "inputs",
              "value": "={{ $json.LogoPrompt }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7104,
        -16
      ],
      "id": "80352d8e-8dc7-44e9-86b2-f48e225b2a7b",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "wbB14Sbw2nErnSp9",
          "name": "Header Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('AI Agent').item.json.output }},\n{{ $json.websiteprompt }}",
        "options": {
          "systemMessage": "=You are an expert AI Web Developer and UI/UX Designer.  \nYour goal is to create a complete, professional, and responsive **one-page website** based on a given product idea and its description, features, and branding details.\n\nFollow these detailed steps for every request:\n\n1. **Understand the Input**\n   - Read the provided JSON input which includes fields like ‚ÄúIdea‚Äù, ‚ÄúProductDescription‚Äù, ‚ÄúKeyFeatures‚Äù, ‚ÄúMarketingCaption‚Äù, and ‚ÄúLogoPrompt‚Äù.\n   - Use these to design the website structure and content.\n\n2. **Website Sections**\n   The website should have these main sections:\n   - **Hero Section** ‚Üí Product name, tagline/marketing caption, and a call-to-action button (‚ÄúGet Started‚Äù or ‚ÄúLearn More‚Äù).\n   - **About Section** ‚Üí Brief description of the product and its purpose.\n   - **Features Section** ‚Üí Display key features in neatly styled cards or icons.\n   - **Contact / Footer Section** ‚Üí Include simple contact information or social placeholders.\n\n3. **Design Style**\n   - Use **modern, clean, and responsive design**.\n   - Prefer a **light theme** with accent colors inspired by the idea (e.g., blue for AI, green for eco-products, purple for creative tools).\n   - Add smooth hover effects and rounded corners.\n   - Keep CSS **inline** (inside `<style>` tags) ‚Äî no external links or frameworks.\n\n4. **Image / Logo Handling**\n   - If a logo URL or prompt is provided, place it as a placeholder image (e.g., `<img src=\"logo.png\" alt=\"Logo\">`).\n\n5. **Output Format**\n   - Return only **valid HTML code** ‚Äî no Markdown formatting, no explanations.\n   - Include both `<html>`, `<head>`, `<style>`, and `<body>` tags properly.\n   - Make sure the website can be directly deployed on Netlify or any static host without editing.\n\n6. **Tone & Content**\n   - Use clear headings, engaging text, and consistent layout.\n   - Avoid overly technical language ‚Äî focus on product appeal and readability.\n\n7.**add the logo the website**\n-as in the previous node logo is generated add that logo to the application in the place of logo.\n---\n\n### Example Input:\n{\n  \"Idea\": \"AI Resume Builder\",\n  \"ProductDescription\": \"A smart platform that uses AI to create optimized resumes...\",\n  \"KeyFeatures\": [\"AI Suggestions\", \"ATS Optimization\", \"Instant PDF Export\"],\n  \"MarketingCaption\": \"Build your dream resume in seconds üöÄ\",\n  \"LogoPrompt\": \"Minimalist blue AI logo with futuristic text\"\n}\n\n### Example Output:\n(Valid HTML code only, no explanations)\n\n<html>\n  ...\n</html>\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        7552,
        -96
      ],
      "id": "9aa8ffbc-2878-4c01-b7a0-402f6ecd59e5",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        7568,
        128
      ],
      "id": "f4f219c7-00ee-4ab6-af2c-8849f25167d8",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "lYRXYtVuDLpbsaEM",
          "name": "Google Gemini(PaLM) Api account 3"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('AI Agent').item.json.output }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        7696,
        128
      ],
      "id": "e4fbb5bc-5591-45f5-80a0-e4615e07b155",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "49c12414-fbeb-41ae-bea5-34be9c6a5066",
      "name": "Combine Product Data and Logo",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        7328,
        -96
      ]
    },
    {
      "parameters": {
        "operation": "html",
        "options": {
          "fileName": "index.html"
        }
      },
      "id": "39aeaa39-95e2-425a-91c2-cace3440604b",
      "name": "Convert HTML to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        7904,
        -96
      ]
    },
    {
      "parameters": {
        "operation": "create",
        "siteId": "=8fc2f2df-ec3a-4aca-b5c4-bc23675c00ac",
        "additionalFields": {}
      },
      "id": "aeccf2d9-5f72-45e4-994a-16eac11b1a2a",
      "name": "Deploy to Netlify",
      "type": "n8n-nodes-base.netlify",
      "typeVersion": 1,
      "position": [
        8128,
        -80
      ],
      "credentials": {
        "netlifyApi": {
          "id": "XnGS5ZqjUpTz0xVG",
          "name": "Netlify account 3"
        }
      }
    }
  ],
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Combine Product Data and Logo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Combine Product Data and Logo",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Convert HTML to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Combine Product Data and Logo": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert HTML to File": {
      "main": [
        [
          {
            "node": "Deploy to Netlify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "593db95e4b1fdaf1ef598b40912e7f2c659c3303c2c383fa7fb250074ab1ef8b"
  }
}
